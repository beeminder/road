!function(t,r){"use strict";"function"==typeof define&&define.amd?define(["moment","butil","broad","beebrain"],r):"object"==typeof module&&module.exports?module.exports=r(require("./moment"),require("./butil"),require("./broad"),require("./beebrain")):t.btest=r(t.moment,t.butil,t.broad,t.beebrain)}(this,function(t,r,e,a){"use strict";return new function(){var t=this;t.compareOutputs=function(t,e){var a=!0,n=!1,i=!1,o="";if(""!=t.error)return{valid:!1,numeric:!1,summary:!1,result:o+="Processing error: "+t.error+"<br/>\n"};for(var s in e)"proctm"!=s&&"thumburl"!=s&&"graphurl"!=s&&(t.hasOwnProperty(s)?Array.isArray(t[s])?r.arrayEquals(t[s],e[s])||(o+="Arr <b>"+s+"</b> differs:<br/>\n<tt>&nbsp;py:</tt>"+e[s]+"<br/>\n<tt>&nbsp;js:</tt>"+t[s]+"<br/>\n",a=!1):t[s]!==e[s]&&(r.nummy(t[s])&&r.nummy(e[s])?(o+="Numeric value <b>"+s+"</b> differs:<br/>\n<tt>&nbsp;py:</tt>"+e[s]+"<br/>\n<tt>&nbsp;js:</tt>"+t[s]+"<br/>\n",n=!0,Math.abs(e[s]-t[s])>1e-8&&(a=!1)):s.endsWith("sum")?(o+="Summary string <b>"+s+"</b> differs:<br/>\n<tt>&nbsp;py:</tt>"+e[s]+"<br/>\n<tt>&nbsp;js:</tt>"+t[s]+"<br/>\n",i=!0):"string"==typeof t[s]||(e[s],1)?(o+="String <b>"+s+"</b> differs:<br/>\n<tt>&nbsp;py:</tt>"+e[s]+"<br/>\n<tt>&nbsp;js:</tt>"+t[s]+"<br/>\n",a=!1):a=!1):(o+="Prp <b>"+s+"</b> is missing from the output<br/>\n",a=!1));return{valid:a,numeric:n,summary:i,result:o}},t.compareWithPybrain=async function(e,n){if(""==e)return null;var i=await r.loadJSON(e),o=await r.loadJSON(n);if(null!=i&&null!=o){var s=new a(i),l=s.getStats(),b=await t.compareOutputs(l,o);return b.typestr=t.goalTypeString(s.goal),b.stats=l,b.pyout=o,b}return null},t.goalTypeString=function(t){var r=r=>t[r]?'<span style="color:black">'+r+"</span>,":"",e=r("kyoom")+r("odom")+r("steppy")+r("rosy")+r("aura")+r("plotall")+r("movingav")+r("hidey")+r("stathead");return e.slice(0,e.length-1)},t.createDiv=function(t,r,e=null,a=!1){var n=document.createElement("div");return n.style.margin="4px",null!=e&&(n.style.background=e),null!=r&&(n.innerHTML=r),a?t.prepend(n):t.appendChild(n),n},t.createImg=function(t,r){var e=document.createElement("img");return e.src=r,t.appendChild(e),e},t.graphCompare=async function(e){if(e.hasOwnProperty("div")&&e.hasOwnProperty("goal")&&e.hasOwnProperty("bbpath")){for(var a,n,i,o,s=e.div,l=e.goal,b=e.bbpath+"/",p=e.bbpath+"/jsout/",u=e.bbpath+"/pyout/",c=e.bbpath,h=e.bbpath+"/jsout";s.firstChild;)s.removeChild(s.firstChild);null==(a=await t.compareWithPybrain(b+l+".bb",u+l+".json"))&&(o="GOAL <b>"+l+"</b>  Processing error, some files not found?",t.createDiv(s,o,"#ffaaaa")),null!=a&&(a.valid?a.numeric||a.summary?(n="[NUMERIC OR SUMMARY ERRORS]",i="#aaaaff"):(n="[EXACT MATCH]",i="#aaffaa"):(n="[OTHER ERRORS]",i="#ffaaaa"),o="Goal <b>"+l+"</b>  ("+a.typestr+") "+n,t.createDiv(s,o,i),t.createDiv(s,a.result)),t.createDiv(s,"Python beebrain graph:","yellow"),t.createImg(s,u+l+".png"),t.createDiv(s,"Javascript beebrain graph:","yellow");var m=null,d=null;await r.loadJSON("http://localhost:8777?slug="+encodeURIComponent(l)+"&inpath="+c+"&outpath="+h)?(t.createImg(s,p+l+".png"),t.createDiv(s,"Thumbnails (python, javascript):","yellow"),(m=t.createImg(s,"")).style.margin="5px",m.src=u+l+"-thumb.png",(d=t.createImg(s,"")).style.margin="5px",d.src=p+l+"-thumb.png"):t.createDiv(s,"Response is null. Did you start jsbrain_server?"),t.createDiv(s,"Javascript client-side graph:","yellow");var g=t.createDiv(s,null);if(g.style.width="696px",g.style.height="453px",new bgraph({divGraph:g,roadEditor:!1,svgSize:{width:696,height:453},focusRect:{x:0,y:0,width:690,height:453},ctxRect:{x:0,y:453,width:690,height:40},maxFutureDays:365,showFocusRect:!1,showContext:!1}).loadGoal(b+l+".bb"),null!=a){t.createDiv(s,"Javascript beebrain JSON output:","yellow");var f=document.createElement("pre");f.innerHTML=JSON.stringify(a.stats,null,1),s.appendChild(f)}}else console.log("btest.graphCompare(): Missing div, goal or bbpath options")},t.batchCompare=async function(r){if(r.hasOwnProperty("div")&&r.hasOwnProperty("goals")&&r.hasOwnProperty("bbpath")){for(var e=r.div,a=r.goals,n=r.bbpath+"/",i=r.bbpath+"/pyout/";e.firstChild;)e.removeChild(e.firstChild);var o,s,l,b,p,u=0,c=0,h=0;for(o=0;o<a.length;o++)console.log("btest.batchCompare: Processing "+a[o]),null!=(s=await t.compareWithPybrain(n+a[o]+".bb",i+a[o]+".json"))?(s.valid?s.numeric||s.summary?(l="[NUMERIC OR SUMMARY ERRORS]",c+=1,b="#aaaaff"):(l="[EXACT MATCH]",u+=1,b="#aaffaa"):(l="[OTHER ERRORS]",h+=1,b="#ffaaaa"),p=o+1+": GOAL <b>"+a[o]+"</b>  ("+s.typestr+") "+l+'</br> &nbsp;&nbsp;>>> <a href="compare_graph.html?base='+a[o]+"&bbpath="+r.bbpath+'" target="blank"=>Click to compare graphs</a>',t.createDiv(e,p,b),t.createDiv(e,s.result)):(p=o+1+": GOAL <b>"+a[o]+'</b>  Processing error, some files not found?  <a href="compare_graph.html?base='+a[o]+"&bbpath="+r.bbpath+'" target="blank"=>Click to compare graphs</a>',t.createDiv(e,p,"#ffaaaa"),h+=1);p="RESULTS ("+a.length+" goals): Exact matches: "+u+", Numeric or Summary errors: "+c+", critical?: "+h;var m=t.createDiv(e,p,null,!0);m.style.border="2px solid black",m.style.padding="5px"}else console.log("btest.batchCompare(): Missing div, goals or bbpath options")}}});