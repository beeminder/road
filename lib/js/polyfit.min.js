!function(t,r){"use strict";"function"==typeof define&&define.amd?define([],r):"object"==typeof module&&module.exports?module.exports=r():t.Polyfit=r()}(this,function(){"use strict";return function t(r,o){if(!(r instanceof Array&&o instanceof Array||r instanceof Float32Array&&o instanceof Float32Array||r instanceof Float64Array&&o instanceof Float64Array))throw new Error("x and y must be arrays");if(r instanceof Float32Array?this.FloatXArray=Float32Array:r instanceof Float64Array&&(this.FloatXArray=Float64Array),r.length!==o.length)throw new Error("x and y must have the same length");this.x=r,this.y=o;const e=function(t,r,o,e){for(var n=o+1;n<e;n++)t[r][n]/=t[r][o];t[r][o]=1},n=function(t,r,o,e,n){for(var a=0;a<e;a++)if(a!==r&&0!==t[a][o]){for(var i=o+1;i<n;i++)t[a][i]-=t[a][o]*t[r][i];t[a][o]=0}},a=function(t,r){for(var o=0,e=0,n=0,a=r.length;n<a;n++)o+=r[n]*Math.pow(t,e++);return o};t.prototype.correlationCoefficient=function(t){for(var r,o,e=0,n=this.x.length,i=0,f=0,s=0,h=0,u=0,c=0;c<n;c++)i+=r=a(this.x[c],t),s+=o=this.y[c],u+=r*o,f+=r*r,h+=o*o;var l=Math.sqrt((f-i*i/n)*(h-s*s/n));return 0!==l&&(e=Math.pow((u-i*s/n)/l,2)),e},t.prototype.standardError=function(t){var r=0,o=this.x.length;if(o>2){for(var e=0,n=0;n<o;n++)e+=Math.pow(a(this.x[n],t)-this.y[n],2);r=Math.sqrt(e/(o-2))}return r},t.prototype.computeCoefficients=function(t){var r,o,a,i=this.x.length,f=2*++t-1,s=[];if(this.FloatXArray){var h=(t+1)*this.FloatXArray.BYTES_PER_ELEMENT,u=new ArrayBuffer(t*h);for(a=0;a<t;a++)s[a]=new this.FloatXArray(u,a*h,t+1)}else{var c=[];for(a=0;a<=t;a++)c[a]=0;for(s[0]=c,a=1;a<t;a++)s[a]=c.slice()}var l=[i];for(a=1;a<f;a++)l[a]=0;for(a=0;a<i;a++){var y=this.x[a],p=this.y[a];for(r=1;r<f;r++)l[r]+=Math.pow(y,r);for(s[0][t]+=p,r=1;r<t;r++)s[r][t]+=Math.pow(y,r)*p}for(r=0;r<t;r++)for(o=0;o<t;o++)s[r][o]=l[r+o];!function(t){for(var r,o,a=t.length,i=t[0].length,f=0,s=0;f<a&&s<i;){for(r=f;r<a&&0===t[r][s];)r++;r<a&&(r!==f&&(o=t[f],t[f]=t[r],t[r]=o),1!==t[f][s]&&e(t,f,s,i),n(t,f,s,a,i),f++),s++}}(s);var v=this.FloatXArray&&new this.FloatXArray(s.length)||[];for(a=s.length-1;a>=0;a--)v[a]=s[a][t];return v},t.prototype.getPolynomial=function(t){if(isNaN(t)||t<0)throw new Error("Degree must be a positive integer");var r=this.computeCoefficients(t),o=[];o.push(r[0].toPrecision());for(var e=1,n=r.length;e<n;e++)o.push(r[e]+" * Math.pow(x, "+e+")");var a="return "+o.join(" + ")+";";return new Function("x",a)},t.prototype.toExpression=function(t){if(isNaN(t)||t<0)throw new Error("Degree must be a positive integer");var r=this.computeCoefficients(t),o=[],e=r.length;o.push(r[0].toPrecision());for(var n=1;n<e;n++)o.push(r[n]+"x^"+n);return o.join(" + ")}}});